# Generated by Django 4.2.5 on 2024-03-05 14:52

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.auth.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_business', models.BooleanField(default=False, verbose_name='Business Account')),
                ('is_personal', models.BooleanField(default=False, verbose_name='Personal Account')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin Account')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Phone Number')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('secret_key', models.CharField(max_length=64)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', user.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CoverImageMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.FileField(blank=True, null=True, upload_to='cover_files/')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.FileField(blank=True, null=True, upload_to='profile_files/')),
                ('media_type', models.CharField(blank=True, max_length=20, verbose_name='Type of media')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='User Bio')),
                ('occupation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Occupation')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Rather not say', 'Rather not say')], max_length=15, null=True, verbose_name='Gender')),
                ('religion', models.CharField(blank=True, choices=[('Christianity', 'Christianity'), ('Muslim', 'Muslim'), ('Indigenous', 'Indigenous'), ('Others', 'Others')], max_length=20, null=True, verbose_name='Religion')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='cover-images', verbose_name='Cover Image')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile-images', verbose_name='Profile Image')),
                ('is_flagged', models.BooleanField(default=False, verbose_name='Is flagged')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('media', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_media', to='user.profilemedia')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_name', models.CharField(max_length=250)),
                ('work', models.CharField(max_length=250)),
                ('link1', models.URLField(max_length=250)),
                ('link2', models.URLField(max_length=250)),
                ('link3', models.URLField(max_length=250)),
                ('media', models.ImageField(blank=True, null=True, upload_to='verificationImage/')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, default='Nigeria', max_length=20, null=True, verbose_name='Country')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='State')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('street_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street Address')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Zip Code')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.userprofile', verbose_name='Profile')),
            ],
            options={
                'verbose_name': 'User Address',
                'verbose_name_plural': 'User Addresses',
            },
        ),
        migrations.CreateModel(
            name='ReportedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('is_banned', models.BooleanField(default=False, verbose_name='Banned')),
                ('is_disabled', models.BooleanField(default=False, verbose_name='Disabled')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OneTimePassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=5, verbose_name='OTP')),
                ('verification_type', models.CharField(choices=[('account_verification', 'Email Verification'), ('password_reset', 'Password Reset')], max_length=25, verbose_name='Verification Type')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='one_time_password', to=settings.AUTH_USER_MODEL, verbose_name='Auth User')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('category', models.CharField(choices=[('IMEI', 'IMEI'), ('SERIAL NUMBER', 'SERIAL NUMBER')], max_length=250)),
                ('input', models.CharField(max_length=250)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sticked_on', models.DateTimeField(auto_now_add=True)),
                ('sticked', models.ForeignKey(help_text='sticking are like those the user is following', on_delete=django.db.models.deletion.CASCADE, related_name='sticking', to='user.userprofile', verbose_name='Sticked')),
                ('sticker', models.ForeignKey(help_text='stickers are like a followers', on_delete=django.db.models.deletion.CASCADE, related_name='stickers', to='user.userprofile', verbose_name='Sticker')),
            ],
            options={
                'unique_together': {('sticker', 'sticked')},
            },
        ),
        migrations.CreateModel(
            name='BlockedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('blocked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockers', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('blocker', 'blocked_user')},
            },
        ),
    ]
